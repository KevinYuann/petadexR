% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalizePlate.R
\name{normalizePlate}
\alias{normalizePlate}
\title{Normalise a measurement column to plate controls}
\usage{
normalizePlate(
  plate.tbl,
  value.col = "colony.value",
  normalize.to,
  suffix = "norm"
)
}
\arguments{
\item{plate.tbl}{A tibble returned by \code{\link[=readPlate]{readPlate()}}; must contain
\code{plateID}, \code{media}, \code{timepoint}, \code{gene}, and the column named in
\code{value.col}.}

\item{value.col}{\code{character(1)} – name of the \strong{numeric} column to
normalise.  \strong{Default:} \code{"colony.value"}.}

\item{normalize.to}{\code{character(1)} – value in \code{gene} that identifies
control wells (e.g. \code{"WT"} or \code{"Empty"}). \strong{Required.}}

\item{suffix}{\code{character(1)} – suffix appended to create the new
column (\code{"<value.col>_<suffix>"}).  \strong{Default:} \code{"norm"}.}
}
\value{
\emph{plate.tbl} plus one extra numeric column
\verb{<value.col>_<suffix>} holding the normalised values
(\code{NA} where the control mean is unavailable or zero).
}
\description{
\code{normalizePlate()} rescales a numeric measurement column (default
\strong{\code{colony.value}}) by dividing every value in a plate table by the
\strong{mean value observed in control wells}.
}
\details{
Control wells are defined by a match between \strong{\code{normalize.to}} and
the contents of the \strong{\code{gene}} column.  Normalisation is performed
\emph{within} each combination of \code{plateID}, \code{media}, and \code{timepoint}
so that different plates, media, or sampling times are treated
independently.
}
\section{Warnings}{

\itemize{
\item If \strong{no control wells} are found for a \verb{\{plateID, media, timepoint\}}
group, that group’s normalised values are set to \code{NA} and a warning
is emitted.
\item A \strong{zero control mean} also yields \code{NA} for the affected rows with
a warning, preventing division-by-zero artefacts.
}
}

\examples{
\dontrun{
raw_tbl <- readPlate("my_plate.csv")

# Normalise colony.value to wells whose gene is "WT"
norm_tbl <- normalizePlate(raw_tbl, normalize.to = "WT")
}

}
